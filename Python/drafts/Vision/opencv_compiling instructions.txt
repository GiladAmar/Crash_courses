https://www.learnopencv.com/install-opencv3-on-ubuntu/

Remove any previous installations of x264
    sudo apt remove x264 libx264-dev

# Requires python and numpy installed
 
We will Install dependencies now
 
sudo apt install -y build-essential checkinstall cmake pkg-config yasm
sudo apt install -y git gfortran
sudo apt install -y ffmpeg 
sudo apt install -y libjpeg8-dev libjpeg-dev libjasper-dev libpng12-dev
 
# If you are using Ubuntu 16.04
sudo apt install -y libtiff5-dev
 
sudo apt install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev 
sudo apt install -y libdc1394-22-dev libdc1394-22 libdc1394-utils 
sudo apt install -y libxine2-dev 
sudo apt install -y libgstreamer0.10-0-dbg libgstreamer0.10-0 libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
sudo apt install -y libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools
sudo apt install -y qt5-default libgtk2.0-dev libtbb-dev
sudo apt install -y libatlas-base-dev
sudo apt install -y libfaac-dev libmp3lame-dev libtheora-dev
sudo apt install -y libvorbis-dev libxvidcore-dev
sudo apt install -y libopencore-amrnb-dev libopencore-amrwb-dev
sudo apt install -y x264 v4l-utils libv4l-0 libv4l-dev
 
# Optional dependencies
sudo apt install -y libprotobuf-dev protobuf-compiler
sudo apt install -y libgoogle-glog-dev libgflags-dev
sudo apt install -y libgphoto2-dev libeigen3-dev libhdf5-dev doxygen

-----
Additional Dependencies:

sudo apt install -y qtbase5-dev 
sudo apt install -y libopencv-dev 
sudo apt install -y libgtk-3-dev 
sudo apt install -y libunicap2 libunicap2-dev  
sudo apt install -y vtk6
sudo apt install -y liblapacke-dev libopenblas-dev libgdal-dev
sudo apt install -y libopenexr-dev
sudo apt install -y libsm6 libxext6
sudo apt install -y pylint


# for gstreamer0.1
*  freeglut3-dev libasound2-dev libxmu-dev libxxf86vm-dev g++ libgl1-mesa-dev libglu1-mesa-dev libraw1394-dev libudev-dev libdrm-dev gstreamer0.10-ffmpeg

---

mkdir build
cd build/
cmake CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/home/giladamar/opencv-3.3.0 \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF \
    -D BUILD_EXAMPLES=OFF \
    -D BUILD_opencv_python2=OFF \
    -D BUILD_opencv_python3=ON \
    -D HAVE_opencv_python3=ON \
    -D BUILD_NEW_PYTHON_SUPPORT=ON \
    -D PYTHON_DEFAULT_EXECUTABLE=/usr/local/bin/python3.6 \
    -D WITH_FFMPEG=ON \
    -D WITH_CUDA=ON \
    -D WITH_QT=ON \
    -D WITH_TBB=ON \
    -D WITH_EIGEN=ON \
    -D WITH_OPENMP=ON \
    -D WITH_IPP=ON \
    -D WITH_NVCUVID=ON \
    -D WITH_CUDA=ON \
    -D BUILD_DOCS=OFF \
    -D BUILD_PERF_TESTS=OFF \
    -D BUILD_TESTS=OFF \
    -D WITH_CSTRIPES=ON \
    -D WITH_OPENCL=ON \
    -D WITH_TIFF=ON \
    -D WITH_JPEG=ON \
    -D WITH_GSTREAMER=ON \
    -D WITH_V4L=ON \ 
    -D WITH_LIBV4L=ON \
    -D WITH_1394=ON ..
make -j8
sudo make install
sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig



WITH_GSTREAMER  OFF Specifies whether to include GStreamer 1.0 support  
WITH_GSTREAMER_0_10 OFF Specifies whether to include GStreamer 0.10 support




############ For Python 3 ############

find /usr/local/lib/ -type f -name "cv2*.so"
->
    ############ For Python 3 ############
    ## binary installed in dist-packages
    /usr/local/lib/python3.5/dist-packages/cv2.cpython-35m-x86_64-linux-gnu.so
    /usr/local/lib/python3.6/dist-packages/cv2.cpython-36m-x86_64-linux-gnu.so
    ## binary installed in site-packages
    /usr/local/lib/python3.5/site-packages/cv2.cpython-35m-x86_64-linux-gnu.so
    /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-x86_64-linux-gnu.so
cd <venv>/lib/python3.6/site-packages
ln -s <correct_path> cv2.so